version: '3.3'

services:

  postgres:
    container_name: postgres
    ports:
      - "5432:5432"
    volumes:
      - "$PWD/postgres/data:/var/lib/postgresql"
    image: postgres:9.6.3
    build: $PWD/postgres
    env_file:
      - db.env
    networks:
       - cluster-1
    healthcheck:
      test: ["CMD-SHELL", "/bin/db_ready.pl"]
      interval: 1s
      timeout: 30s
      retries: 0

  mysql:
    container_name: mysql
    build: mysql
    image: namic:5000/mysql
    environment:
      - MYSQL_DATABASES=acidworx
      - MYSQL_ROOT_PASSWORD=acidworx
      - MYSQL_HOST=127.0.0.1
      - MYSQL_PORT=3306
      - MYSQL_USER=acidworx
      - MYSQL_PASSWORD=TrippyMoon1234
      - MYSQL_MY_DATABASE=acidworx
    ports:
      - "3306:3306"
    volumes:
      - "$PWD/mysql/data:/var/lib/mysql"
    networks:
      - cluster-1

  minion_worker: 
    container_name: minion_worker
    image: namic:5000/minion_build
    build: $PWD/minion
    command: /data/worker.pl
    volumes:
      - $PWD/minion/data:/data
    environment:
      CONNECTION_STRING: 'postgresql://mic:mic@namic/mic'
      NUMBER_OF_JOBS: 12
    env_file:
      - db.env
    depends_on:
      #postgres:
      #  condition: service_healthy
      - postgres
    #tty: true
    healthcheck:
      test: ["CMD-SHELL", "/bin/db_ready.pl"]
      interval: 1s
      timeout: 30s
      retries: 0
    networks:
      - cluster-1

  acidworx:
    container_name: acidworx-webapp
    image: namic:5000/acidworx
    build: $PWD/acidworx
    volumes:
      - $PWD/acidworx/AW1/dev/AcidWorx:/acidworx
    ports:
      - "8081:8081"
    depends_on:
      - mysql
    networks:
      - cluster-1

networks:
  cluster-1:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.2.0/24


#docker-compose rm -v postgres