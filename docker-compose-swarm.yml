version: '3.3'

services:

  postgres:
    container_name: postgres
    volumes:
      - type: volume
        source: postgres_nfs_vol
        target: /var/lib/postgresql
        volume:
          nocopy: true
    image: postgres:9.6.3
    build: $PWD/postgres
    env_file:
      - db.env
    networks:
       - cluster-1-swarm
      #- cluster-1
    deploy:
      placement:
        constraints:
          - node.role == manager
    healthcheck:
      test: ["CMD-SHELL", "/bin/db_ready.pl"]
      interval: 1s
      timeout: 30s
      retries: 0

  mysql:
    container_name: mysql
    build: mysql
    image: namic:5000/mysql
    environment:
      - MYSQL_DATABASES=acidworx
      - MYSQL_ROOT_PASSWORD=acidworx
      - MYSQL_HOST=127.0.0.1
      - MYSQL_PORT=3306
      - MYSQL_USER=acidworx
      - MYSQL_PASSWORD=TrippyMoon1234
      - MYSQL_MY_DATABASE=acidworx
    volumes:
      - type: volume
        source: mysql_nfs_vol
        target: /var/lib/mysql
        volume:
          nocopy: true
    networks:
      - cluster-1-swarm
      #- cluster-1
    deploy:
      placement:
        constraints:
          - node.role == manager

#  minion_worker: 
#    container_name: minion_worker
#    image: namic:5000/minion_build
#    build: $PWD/minion
#    command: /data/worker.pl
#    volumes:
#      - $PWD/minion/data:/data
#    environment:
#      CONNECTION_STRING: 'postgresql://mic:mic@namic/mic'
#      NUMBER_OF_JOBS: 12
#    env_file:
#      - db.env
#    depends_on:
#      #postgres:
#      #  condition: service_healthy
#      - postgres
#    #tty: true
#    healthcheck:
#      test: ["CMD-SHELL", "/bin/db_ready.pl"]
#      interval: 1s
#      timeout: 30s
#      retries: 0
#    networks:
#      - cluster-1-swarm
#      #- cluster-1
#    deploy:
#      placement:
#        constraints:
#          - node.role == manager

  traefik:
    container_name: traefik
    image: traefik:1.4.3
    ports:
      - 80:80
      - 8080:8080
    networks:
      - cluster-1-swarm
      #- cluster-1
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    configs:
      - source: traefik-config
        target: /etc/traefik/traefik.toml
    deploy:
      placement:
        constraints:
          - node.role == manager   

  acidworx:
    container_name: acidworx-webapp
    image: namic:5000/acidworx
    build: $PWD/acidworx
    volumes:
      - $PWD/acidworx/AW1/dev/AcidWorx:/acidworx
    depends_on:
      - mysql
      - traefik
    networks:
      - cluster-1-swarm
      #- cluster-1
    deploy:
      placement:
        constraints:
          - node.role == manager
      labels:
        - "traefik.port=8081"
        - "traefik.backend=acidworx"
        - "traefik.frontend.rule=Host:dev.acidchild.org"

configs:
  traefik-config:
    file: config.toml

networks:
  cluster-1-swarm:
    driver: overlay
    ipam:
      config:
        - subnet: 172.25.2.0/24

volumes: 
  mysql_nfs_vol:
    driver: local
    driver_opts:
      type: "nfs"
      o: "addr=10.0.0.1,nolock,soft,rw"
      device: ":/mnt/nfs/mysql"
  postgres_nfs_vol:
    driver: local
    driver_opts:
      type: "nfs"
      o: "addr=10.0.0.1,nolock,soft,rw"
      device: ":/mnt/nfs/postgres"


#docker-compose rm -v postgres